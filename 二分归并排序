#define _CRT_SECURE_NO_DEPRECATE；
#define _CRT_SECURE_NO_WARNINGS

#include<stdio.h>
#include<stdlib.h>
const int n = 8;//数组长度

void Merge(int A[], int p, int q, int r)
{
	int* L, * R, x, y;
	x = q - p + 1, y = r - q;
	L = (int*)malloc(sizeof(int) * x);
	R = (int*)malloc(sizeof(int) * y);
	int i, j;
	for (i = 0; i < x; i++)
		L[i] = A[i + p];
	for (j = 0; j < y; j++)
		R[j] = A[j + q + 1];
	i = j = 0;
	int k = p;
	while (i < x && j < y)
	{
		if (L[i] <= R[j])
			A[k++] = L[i++];
		else
			A[k++] = R[j++];
	}
	while (i < x)
		A[k++] = L[i++];
	while (j < y)
		A[k++] = R[j++];
	free(L);
	free(R);
}

void MergeSort(int A[], int p, int r)	// 递归分组函数
{
	if (p < r)
	{
		int q = (p + r) / 2;
		MergeSort(A, p, q);
		MergeSort(A, q + 1, r);
		Merge(A, p, q, r);// 调用Merge函数，合并两组数据
	}
}

int main()
{
	int A[n] = { 3,4,2,6,7,8,1,10 };
	MergeSort(A, 0, n-1);
	for (int i = 0; i < n; i++)
	{
		printf("%d ", A[i]);
	}
	return 0;
}
